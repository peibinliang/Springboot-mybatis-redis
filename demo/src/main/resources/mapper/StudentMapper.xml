<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Student">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="studentname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="studentnumber" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="score" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="studentclass" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, studentname, studentnumber, score, studentclass
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Student">
    insert into student (id, studentname, studentnumber, 
      score, studentclass)
    values (#{id,jdbcType=INTEGER}, #{studentname,jdbcType=VARCHAR}, #{studentnumber,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{studentclass,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentname != null">
        studentname,
      </if>
      <if test="studentnumber != null">
        studentnumber,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="studentclass != null">
        studentclass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null">
        #{studentnumber,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="studentclass != null">
        #{studentclass,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Student">
    update student
    <set>
      <if test="studentname != null">
        studentname = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null">
        studentnumber = #{studentnumber,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="studentclass != null">
        studentclass = #{studentclass,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Student">
    update student
    set studentname = #{studentname,jdbcType=VARCHAR},
      studentnumber = #{studentnumber,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      studentclass = #{studentclass,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.example.demo.entity.Student">
    insert into student (userID, userName, sex, 
      birthYear, grade, collegeID
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthyear,jdbcType=DATE}, #{grade,jdbcType=DATE}, #{collegeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthyear != null">
        birthYear,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="collegeid != null">
        collegeID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthyear != null">
        #{birthyear,jdbcType=DATE},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=DATE},
      </if>
      <if test="collegeid != null">
        #{collegeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="selectAllStudent" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
  </select>
</mapper>